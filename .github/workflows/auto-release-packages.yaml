on:
  schedule:
  - cron: '*/15 * * * *'

name: Auto release packages

jobs:
  build:
    name: Auto release packages
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for changes
        id: check-for-changes
        run: |
          RELEASE=false
          BUMP=patch

          TIMESTAMP="$(
              curl "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest" \
                    --silent \
                    --location \
                    --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | \
                  jq --raw-output .created_at
          )"

          RENOVATE_PR_COUNT="$(
              curl "https://api.github.com/repos/${GITHUB_REPOSITORY}/issues?state=closed&since=${TIMESTAMP}&labels=type/renovate" \
                      --silent \
                      --location \
                      --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | \
                  jq '.[].number' | \
                  wc -l
          )"
          if test "${RENOVATE_PR_COUNT}" -gt 0; then
              echo "Found closed pull requests. Will release a patch (at least)."
              RELEASE=true
              BUMP=patch
          fi

          PACKAGE_ISSUE_COUNT="$(
              curl "https://api.github.com/repos/${GITHUB_REPOSITORY}/issues?state=closed&since=${TIMESTAMP}&labels=component/package" \
                      --silent \
                      --location \
                      --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | \
                  jq '.[].number' | \
                  wc -l
          )"
          if test "${PACKAGE_ISSUE_COUNT}" -gt 0; then
              echo "Found closed issues. Will release a minor version."
              RELEASE=true
              BUMP=minor
          fi

          echo "::set-output name=release::${RELEASE}"
          if ${RELEASE}; then
              VERSION="$(
                  curl "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest" \
                        --silent \
                        --location \
                        --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | \
                      jq --raw-output .tag_name | \
                      cut -d/ -f2
              )"
              NEW_VERSION="packages/$(./.bin/semver bump "${BUMP}")"
              echo "::set-output name=tagname::${NEW_VERSION}"
          fi

      - name: Create tag
        uses: actions/github-script@v3
        if: steps.check-for-changes.release == "true"
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{steps.check-for-changes.tagname}}",
              sha: context.sha
            })
